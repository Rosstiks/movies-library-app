{"version":3,"sources":["services/moviedb-service/moviedb-service.js","components/movie-item/__header/movie-item___header.js","components/movie-item/__header/index.js","components/movie-item/movie-item.js","services/cut-overflow-content/cut-overflow-content.js","components/movie-list/index.js","components/movie-list/movie-list.js","components/header/index.js","components/header/header.js","components/app/app.js","components/app/index.js","index.js"],"names":["MovieDBService","_apiKey","_apiBase","requestFromDB","request","a","fetch","response","json","searchMovies","keyword","data","results","getActualGenresList","genresList","genres","MovieItemHeader","poster","vote","title","date","genresBlocks","map","el","className","name","id","src","alt","defaultProps","MovieItem","selector","overviewBlocks","document","getElementById","scrollHeight","clientHeight","lastSpace","textContent","lastIndexOf","slice","cutOverflowContent","this","props","overview","popularity","other","defaultValue","allowHalf","count","style","fontSize","verticalAlign","lineHeight","React","Component","MovieList","moviesList","movies","xs","span","lg","gutter","Header","placeholder","App","movieDBService","state","getMoviesData","responseGenres","forEach","responseMovies","createDataMovie","setState","genre_ids","format","Date","release_date","poster_path","vote_average","Math","trunc","ReactDOM","render"],"mappings":"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","file":"static/js/main.8a84f110.chunk.js","sourcesContent":["export default class MovieDBService {\n  _apiKey = 'api_key=b7473b579abba0475a9336164324a2c1';\n\n  _apiBase = 'https://api.themoviedb.org/3';\n\n  requestFromDB = async (request) => {\n    const response = await fetch(`${this._apiBase}${request}`);\n    // eslint-disable-next-line no-return-await\n    return await response.json();\n  };\n\n  searchMovies = async (keyword) => {\n    const data = await this.requestFromDB(`/search/movie?${this._apiKey}&query=${keyword}`);\n    return data.results;\n  };\n\n  getActualGenresList = async () => {\n    const genresList = await this.requestFromDB(`/genre/movie/list?${this._apiKey}`);\n    return genresList.genres;\n  };\n}\n","import React from 'react';\nimport './movie-item__header.css';\nimport PropTypes from 'prop-types';\n\nexport default function MovieItemHeader({ poster, vote, title, date, genres }) {\n  const genresBlocks = genres.map((el) => (\n    <span key={el.id} className=\"movie-item__genres-item\">\n      {el.name}\n    </span>\n  ));\n\n  return (\n    <header className=\"movie-item__header\">\n      <img className=\"movie-item__poster\" src={poster} alt=\"Movie poster\" />\n      <div className=\"movie-item__header-content\">\n        <div className=\"movie-item__vote-container\">\n          <span className=\"movie-item__vote\">{vote}</span>\n        </div>\n        <h3 className=\"movie-item__title\">{title}</h3>\n        <div className=\"movie-item__date\">{date}</div>\n        <div className=\"movie-item__genres-container\">{genresBlocks}</div>\n      </div>\n    </header>\n  );\n}\n\nMovieItemHeader.defaultProps = {\n  genres: ['No info'],\n  vote: 0,\n};\n\nMovieItemHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.object),\n  vote: PropTypes.number,\n};\n","import MovieItemHeader from './movie-item___header';\n\nexport default MovieItemHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Rate } from 'antd';\n\nimport './movie-item.css';\nimport MovieItemHeader from './__header';\nimport cutOverflowContent from '../../services/cut-overflow-content/cut-overflow-content';\n\nexport default class MovieItem extends React.Component {\n  static defaultProps = {\n    popularity: 0,\n    overview: 'Overview not found',\n  };\n\n  static propTypes = {\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    id: PropTypes.number.isRequired,\n  };\n\n  componentDidMount() {\n    const { id } = this.props;\n    cutOverflowContent(id);\n  }\n\n  render() {\n    const { overview, popularity, id, ...other } = this.props;\n\n    return (\n      <div className=\"movie-item\">\n        <MovieItemHeader {...other} />\n        <p id={id} className=\"movie-item__overview\">\n          {overview}{' '}\n        </p>\n        <footer className=\"movie-item__footer\">\n          <Rate\n            defaultValue={popularity}\n            allowHalf\n            count={10}\n            style={{ fontSize: '1.3em', verticalAlign: 'middle', lineHeight: '46px' }}\n          />\n        </footer>\n      </div>\n    );\n  }\n}\n","export default function cutOverflowContent(selector) {\n  const overviewBlocks = document.getElementById(selector);\n  while (overviewBlocks.scrollHeight > overviewBlocks.clientHeight) {\n    const lastSpace = overviewBlocks.textContent.lastIndexOf(' ');\n    overviewBlocks.textContent = `${overviewBlocks.textContent.slice(0, lastSpace)}...`;\n  }\n}\n","import MovieList from './movie-list';\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'antd';\nimport './movie-list.css';\n\nimport MovieItem from '../movie-item/movie-item';\n\nexport default function MovieList({ movies }) {\n  const moviesList = movies.map((el) => {\n    const { id } = el;\n    return (\n      <Col key={id} xs={{ span: 24 }} lg={{ span: 12 }}>\n        <MovieItem {...el} />\n      </Col>\n    );\n  });\n\n  return <Row gutter={[36, 36]}>{moviesList}</Row>;\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport { Input } from 'antd';\n\nimport './header.css';\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <Input placeholder=\"Type to search...\" />\n    </header>\n  );\n}\n","import React from 'react';\nimport { format } from 'date-fns';\nimport MovieDBService from '../../services/moviedb-service/moviedb-service';\n\nimport './app.css';\nimport MovieList from '../movie-list';\nimport Header from '../header';\n\nexport default class App extends React.Component {\n  movieDBService = new MovieDBService();\n\n  constructor(props) {\n    super(props);\n    this.getMoviesData('return');\n  }\n\n  state = {\n    movies: [],\n    // currentPage: 1,\n    // keyword: '',\n  };\n\n  async getMoviesData(keyword) {\n    const responseGenres = await this.movieDBService.getActualGenresList();\n    const genresList = {};\n    responseGenres.forEach((el) => {\n      genresList[el.id] = el.name;\n    });\n    const responseMovies = await this.movieDBService.searchMovies(keyword);\n    const movies = responseMovies.map((el) => this.createDataMovie(el, genresList));\n    this.setState({ movies });\n  }\n\n  createDataMovie(data, genresList) {\n    const genres = data.genre_ids.map((id) => ({ id, name: genresList[id] }));\n    return {\n      id: data.id,\n      title: data.title,\n      overview: data.overview,\n      date: format(new Date(data.release_date), 'MMM d, y'),\n      poster: `https://image.tmdb.org/t/p/w500${data.poster_path}`,\n      genres,\n      vote: data.vote_average,\n      popularity: Math.trunc(data.popularity) / 10,\n    };\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <MovieList movies={movies} />\n      </div>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}